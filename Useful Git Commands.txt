
	git --version	=> check current git version 

	git help config	=> git help config

	git help log	=> git help log 

	mkdir test	=> create git directory test

	cd test		=> change directory test

	git config --global core.editor "atom --wait" => change your text editor 

	git config --global color.ui true  => Add color to git output 

	git init     => Initialize a local Git repository or Initialize git in a project 

	git init . => create .get folder  
	
	git remote add origin https://github.com [repository name]

	git add . => git commit to file

	git reset HEAD => [File name]

	git checkout -- => [File Name]

	git log --oneLine --graph --grpah --decorate --all 

	git config --global alias.hit "log --oneLine --graph --decorate --all"

	git config --global --list

	git hist 

	git hist --LICENSE.md 

	git mv example.txt demo.txt => File rename 

	git rm demo.txt 

	touch myfile.txt 

	ls -l 

	git add -u  => u means updated 

	git status 

	git add -A 

	git diff 

	git difftool

	git help diff 

	git branch 

	git checkout -b updates 

	git diff updates master 

	git checkout master 

	git merge updates 

	git branch -d updates => delete branches 

	git branch 

	git checkout -b very-bad 
	
	git branch -a 

	git commit -am "very bad update"

	git checkout master 

	git branch -a 

	git merge very-bad 

	git mergetool 

	git tag mytag

	git tag --list

	git tag -d mytag 

	git tag -a v1.0 -m "Release1.0"

	git show v1.0 

	git stash 

	git stash list

	git stash pop 

	git stash list 

	git reset ce2c810 --soft

	git reset 6ad74df --mixed 

	git reset d444e90 --hard 

	git reflog 

	git reset --hard 67b1242 

	git push -u origin master --tags 

	mkdir .ssh cd .ssh/
	pwd
	.ssh
	ssh-keygen -t rsa -C "email"

	ssh -T git@github.com  
	
	git clone ssh://git@github.com/[username]/[repository-name].git => Create a local copy of a remote repository

	git push origin master 

	git config --global push.default simple 

	git fetch 

	git remote set-url origin [put address]

	git remote show origin 

	git push --force origin master

	git status => Check status 

	git restore [file name]

	git add [file-name.txt]

	git add -A => Add all new and changed files to the staging area 

	git commit -m "[commit message]"  => Commit changes 

	git rm -r [file-name.txt]

	git branch	=> List branches (the asterisk denotes the current branch)

	git branch -a	=> List all branches (local and remote)

	git branch [branch name]	=> Create a new branch

	git branch -d [branch name]	=> Delete a branch

	git checkout -b [branch name]	=> Create a new branch and switch to it

	git checkout -b [branch name] origin/[branch name]	=> Clone a remote branch and switch to it

	git branch -m [old branch name] [new branch name]	=> Rename a local branch

	git checkout [branch name]	=> Switch to a branch

	git checkout -	=> Switch to the branch last checked out

	git checkout -- [file-name.txt]	=> Discard changes to a file

	git merge [branch name]	=> Merge a branch into the active branch

	git merge [source branch] [target branch]	=> Merge a branch into a target branch

	git stash	=> Stash changes in a dirty working directory

	git stash clear

	git push origin [branch name]	=> Push a branch to your remote repository
	
	git push -u origin [branch name]	=> Push changes to remote repository (and remember the branch)

	git push	=> Push changes to remote repository (remembered branch)

	git push origin --delete [branch name]	=> Delete a remote branch

	git pull	=> Update local repository to the newest commit

	git pull origin [branch name]	=> Pull changes from remote repository

	git remote add origin ssh://git@github.com/[username]/[repository-name].git	=> Add a remote repository

	git remote set-url origin ssh://git@github.com/[username]/[repository-name].git	=> Set a repository's origin branch to SSH
 
	git add demo.txt

	git comit -m "comiting a text file"

	git config --global --list

	git config --global --unset-all user.name

	git config --global --remove-section user

	cat ~/.gitconfig

	git remote -v => verified 

	git push -u origin master 

	git fetch origin master 

	git merge origin/master 

	git pull origin master 

	git remote remove origin 
	
	git remote add (address)

	git remote -v 

	git pull origin master --allow-unrelated-histories

	git add Myfile.txt MyOtherfile.txt

	git commit -m "Added files"

	git push origin master 

	git rm -r folder-name

	git push origin [branch name]	=> Push a branch to your remote repository

	git push -u origin [branch name] => Push changes to remote repository (and remember the branch)

	git push origin --delete [branch name]	=> Delete a remote branch

	git pull origin [branch name]	=> Pull changes from remote repository

	git remote add origin ssh://git@github.com/[username]/[repository-name].git	=> Add a remote repository

	git remote set-url origin ssh://git@github.com/[username]/[repository-name].git	 => Set a repository's origin branch to SSH

	git log --summary	=> View changes (detailed)
	git log --oneline	=> View changes (briefly)
	git diff [source branch] [target branch]	=> Preview changes before merging
